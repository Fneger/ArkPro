/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp /home/user/Desktop/ArkSdk/SettingService/SettingService.xml -i /home/user/Desktop/ArkSdk/SettingService/SettingService.h -p /home/user/Desktop/ArkSdk/SettingService/SettingServiceProxy
 *
 * qdbusxml2cpp is Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef SETTINGSERVICEPROXY_H_1488253945
#define SETTINGSERVICEPROXY_H_1488253945

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface Local.DbusServer.Setting
 */
class LocalDbusServerSettingInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "Local.DbusServer.Setting"; }

public:
    LocalDbusServerSettingInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~LocalDbusServerSettingInterface();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<> setBrightness(int type, int value)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(type) << qVariantFromValue(value);
        return asyncCallWithArgumentList(QLatin1String("setBrightness"), argumentList);
    }

    inline QDBusPendingReply<> setContrast(int type, int value)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(type) << qVariantFromValue(value);
        return asyncCallWithArgumentList(QLatin1String("setContrast"), argumentList);
    }

    inline QDBusPendingReply<> setHue(int type, int value)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(type) << qVariantFromValue(value);
        return asyncCallWithArgumentList(QLatin1String("setHue"), argumentList);
    }

    inline QDBusPendingReply<> setLanguage(int language)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(language);
        return asyncCallWithArgumentList(QLatin1String("setLanguage"), argumentList);
    }

    inline QDBusPendingReply<> synchronize()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("synchronize"), argumentList);
    }

    inline QDBusPendingReply<> test()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("test"), argumentList);
    }

Q_SIGNALS: // SIGNALS
    void onBrightnessChange(int value);
    void onContrastChange(int value);
    void onDateTimeChange(const QString &date, const QString &time);
    void onHueChange(int value);
    void onLanguageChange(int language);
    void onTest();
};

namespace Local {
  namespace DbusServer {
    typedef ::LocalDbusServerSettingInterface Setting;
  }
}
#endif
